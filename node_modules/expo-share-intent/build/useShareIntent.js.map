{"version":3,"file":"useShareIntent.js","sourceRoot":"","sources":["../src/useShareIntent.tsx"],"names":[],"mappings":"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","sourcesContent":["import { useURL } from \"expo-linking\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { AppState, Platform } from \"react-native\";\n\nimport {\n  addChangeListener,\n  addErrorListener,\n  clearShareIntent,\n  getShareIntent,\n} from \"./ExpoShareIntentModule\";\nimport {\n  AndroidShareIntent,\n  IosShareIntent,\n  ShareIntent,\n  ShareIntentFile,\n  ShareIntentOptions,\n} from \"./ExpoShareIntentModule.types\";\nimport { getScheme, getShareExtensionKey } from \"./utils\";\n\nexport const SHAREINTENT_DEFAULTVALUE: ShareIntent = {\n  files: null,\n  text: null,\n  webUrl: null,\n  type: null,\n};\n\nexport const SHAREINTENT_OPTIONS_DEFAULT: ShareIntentOptions = {\n  debug: false,\n  resetOnBackground: true,\n  disabled: Platform.OS === \"web\",\n};\n\n// const IOS_SHARE_TYPE_MAPPING = {\n//   0: \"media\",\n//   1: \"text\",\n//   2: \"weburl\",\n//   3: \"file\",\n// };\n\nconst parseShareIntent = (\n  value: string | AndroidShareIntent,\n  options: ShareIntentOptions,\n): ShareIntent => {\n  let result = SHAREINTENT_DEFAULTVALUE;\n  if (!value) return result;\n  let shareIntent;\n  // ios native module send a raw string of the json, try to parse it\n  if (typeof value === \"string\") {\n    shareIntent = JSON.parse(value) as IosShareIntent; // iOS\n  } else {\n    shareIntent = value; // Android\n  }\n\n  if (shareIntent.text) {\n    // Try to find the webURL in the SharedIntent text\n    const webUrl =\n      shareIntent.text.match(\n        /[(http(s)?)://(www.)?-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/gi,\n      )?.[0] || null;\n\n    result = {\n      ...SHAREINTENT_DEFAULTVALUE,\n      text: shareIntent.text,\n      webUrl,\n      type: webUrl ? \"weburl\" : \"text\",\n      meta: {\n        title: shareIntent.meta?.title ?? undefined,\n      },\n    };\n  } else {\n    // Ensure we got a valid file. some array value are emply\n    const files =\n      shareIntent?.files?.filter((file: any) => file.path || file.contentUri) ||\n      [];\n    const isMedia = files.every(\n      (file) =>\n        file.mimeType.startsWith(\"image/\") ||\n        file.mimeType.startsWith(\"video/\"),\n    );\n    result = {\n      ...SHAREINTENT_DEFAULTVALUE,\n      files: shareIntent?.files\n        ? shareIntent.files.reduce((acc: ShareIntentFile[], file: any) => {\n            if (!file.path && !file.contentUri) return acc;\n            return [\n              ...acc,\n              {\n                path:\n                  file.path ||\n                  (file.filePath ? `file://${file.filePath}` : null) ||\n                  file.contentUri ||\n                  null,\n                mimeType: file.mimeType || null,\n                fileName: file.fileName || null,\n                width: file.width ? Number(file.width) : null,\n                height: file.height ? Number(file.height) : null,\n                size: file.fileSize ? Number(file.fileSize) : null,\n                duration: file.duration ? Number(file.duration) : null,\n              },\n            ];\n          }, [])\n        : null,\n      type: isMedia ? \"media\" : \"file\",\n    };\n  }\n  options.debug &&\n    console.debug(\"useShareIntent[parsed] \", JSON.stringify(result, null, 2));\n  return result;\n};\n\nexport default function useShareIntent(\n  options: ShareIntentOptions = SHAREINTENT_OPTIONS_DEFAULT,\n) {\n  const url = useURL();\n\n  const appState = useRef(AppState.currentState);\n  const [shareIntent, setSharedIntent] = useState<ShareIntent>(\n    SHAREINTENT_DEFAULTVALUE,\n  );\n  const [error, setError] = useState<string | null>(null);\n  const [isReady, setIsReady] = useState(false);\n\n  const resetShareIntent = (clearNativeModule = true) => {\n    if (options.disabled) return;\n    setError(null);\n    clearNativeModule && clearShareIntent(getShareExtensionKey(options));\n    if (shareIntent?.text || shareIntent?.files) {\n      setSharedIntent(SHAREINTENT_DEFAULTVALUE);\n      options.onResetShareIntent?.();\n    }\n  };\n\n  /**\n   * Call native module on universal linking url change\n   */\n  const refreshShareIntent = () => {\n    options.debug && console.debug(\"useShareIntent[refresh]\", url);\n    if (url?.includes(`${getScheme(options)}://dataUrl=`)) {\n      // iOS only\n      getShareIntent(url);\n    } else if (Platform.OS === \"android\") {\n      getShareIntent();\n    }\n  };\n\n  useEffect(() => {\n    if (options.disabled) return;\n    options.debug &&\n      console.debug(\"useShareIntent[mount]\", getScheme(options), options);\n    refreshShareIntent();\n  }, [url, options.disabled]);\n\n  /**\n   * Handle application state (active, background, inactive)\n   */\n  useEffect(() => {\n    if (options.disabled) return;\n    const subscription = AppState.addEventListener(\"change\", (nextAppState) => {\n      if (nextAppState === \"active\") {\n        options.debug && console.debug(\"useShareIntent[active] refresh intent\");\n        refreshShareIntent();\n      } else if (\n        options.resetOnBackground !== false &&\n        appState.current === \"active\" &&\n        [\"inactive\", \"background\"].includes(nextAppState)\n      ) {\n        options.debug &&\n          console.debug(\"useShareIntent[to-background] reset intent\");\n        resetShareIntent();\n      }\n      appState.current = nextAppState;\n    });\n    return () => {\n      subscription.remove();\n    };\n  }, [url, shareIntent, options.disabled]);\n\n  /**\n   * Detect Native Module response\n   */\n  useEffect(() => {\n    if (options.disabled) {\n      options.debug &&\n        console.debug(\"expo-share-intent module is disabled by configuration!\");\n      return;\n    }\n    const changeSubscription = addChangeListener((event) => {\n      options.debug &&\n        console.debug(\n          \"useShareIntent[onChange]\",\n          JSON.stringify(event, null, 2),\n        );\n      try {\n        setSharedIntent(parseShareIntent(event.value, options));\n      } catch (e) {\n        options.debug && console.error(\"useShareIntent[onChange]\", e);\n        setError(\"Cannot parse share intent value !\");\n      }\n    });\n    const errorSubscription = addErrorListener((event) => {\n      options.debug && console.debug(\"useShareIntent[error]\", event?.value);\n      setError(event?.value);\n    });\n    setIsReady(true);\n    return () => {\n      changeSubscription?.remove();\n      errorSubscription?.remove();\n    };\n  }, [options.disabled]);\n\n  return {\n    isReady,\n    hasShareIntent: !!(shareIntent?.text || shareIntent?.files),\n    shareIntent,\n    resetShareIntent,\n    error,\n  };\n}\n"]}