{"version":3,"file":"ExpoShareIntentModule.types.js","sourceRoot":"","sources":["../src/ExpoShareIntentModule.types.ts"],"names":[],"mappings":"","sourcesContent":["export type ChangeEventPayload = {\n  value: string;\n};\n\nexport type StateEventPayload = {\n  value: \"pending\" | \"none\";\n};\n\n/**\n * Options for configuring the `useShareIntent` hook.\n */\nexport type ShareIntentOptions = {\n  /**\n   * If `true`, includes additional logs for debugging.\n   * @default false\n   */\n  debug?: boolean;\n  /**\n   * If `true`, resets the shared content when the\n   * app goes into the background / foreground.\n   * @default true\n   */\n  resetOnBackground?: boolean;\n  /**\n   * If `true`, disables shared intent.\n   * @default false\n   */\n  disabled?: boolean;\n  /**\n   * Optional force application scheme to retreive ShareIntent on iOS.\n   */\n  scheme?: string;\n  /**\n   * Optional callback function that is triggered when the shared media resets.\n   */\n  onResetShareIntent?: () => void;\n};\n\nexport type ShareIntentMeta = {\n  title?: string;\n};\n\n/**\n * Base type for what shared content is common between both platforms.\n */\ninterface BaseShareIntent {\n  meta?: ShareIntentMeta;\n  text?: string | null;\n}\n\n/**\n * Shared intent to represent both platforms.\n */\nexport type ShareIntent = BaseShareIntent & {\n  files: ShareIntentFile[] | null;\n  type: \"media\" | \"file\" | \"text\" | \"weburl\" | null;\n  webUrl: string | null;\n};\n\n/**\n * Shared intent type for Android.\n */\nexport interface AndroidShareIntent extends BaseShareIntent {\n  files?: AndroidShareIntentFile[];\n  type: \"file\" | \"text\";\n}\n\n/**\n * Shared intent type for iOS.\n */\nexport interface IosShareIntent extends BaseShareIntent {\n  files?: IosShareIntentFile[];\n  type: \"media\" | \"file\" | \"text\" | \"weburl\";\n}\n\n/**\n * ShareIntentFile that is common among both platforms\n */\nexport type ShareIntentFile = {\n  fileName: string;\n  mimeType: string;\n  path: string;\n  size: number | null;\n  width: number | null;\n  height: number | null;\n  duration: number | null;\n};\n\n/**\n * ShareIntentFile in iOS\n */\nexport interface IosShareIntentFile {\n  fileSize?: number; // in octet\n  fileName: string; // original filename\n  mimeType: string; // ex: image/png\n  path: string; // computed full path of file\n  type: \"0\" | \"1\" | \"2\" | \"3\"; // native type (\"0\": media, \"1\": text, \"2\": weburl, \"3\": file)\n  width: number | null;\n  height: number | null;\n  duration: number | null; // in ms\n}\n\n/**\n * ShareIntentFile in Android\n */\nexport interface AndroidShareIntentFile {\n  contentUri: string; // original android uri of file\n  mimeType: string; // ex: image/png\n  fileName: string; // original filename\n  filePath: string; // computed full path of file\n  fileSize?: string; // in octet\n  width: number | null;\n  height: number | null;\n  duration: number | null; // in ms\n}\n\nexport type NativeShareIntent = AndroidShareIntent | IosShareIntent;\nexport type NativeShareIntentFile = AndroidShareIntentFile | IosShareIntentFile;\n"]}